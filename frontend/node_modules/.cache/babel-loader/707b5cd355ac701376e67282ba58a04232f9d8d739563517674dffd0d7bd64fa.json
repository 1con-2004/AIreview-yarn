{"ast":null,"code":"import { reactive, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nconst __default__ = {\n  name: 'LoginResetPassword'\n};\nexport default /*@__PURE__*/Object.assign(__default__, {\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const countdown = ref(0);\n    const resetForm = reactive({\n      phone: '',\n      code: '',\n      password: '',\n      confirmPassword: ''\n    });\n    const sendVerificationCode = async () => {\n      if (!/^1[3-9]\\d{9}$/.test(resetForm.phone)) {\n        alert('请输入正确的手机号');\n        return;\n      }\n      try {\n        countdown.value = 60;\n        const timer = setInterval(() => {\n          countdown.value--;\n          if (countdown.value <= 0) {\n            clearInterval(timer);\n          }\n        }, 1000);\n      } catch (error) {\n        console.error('发送验证码失败：', error);\n      }\n    };\n    const handleResetPassword = async () => {\n      if (resetForm.password !== resetForm.confirmPassword) {\n        alert('两次输入的密码不一致');\n        return;\n      }\n      // 重置密码逻辑\n    };\n    const __returned__ = {\n      router,\n      countdown,\n      resetForm,\n      sendVerificationCode,\n      handleResetPassword,\n      reactive,\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["reactive","ref","useRouter","__default__","name","router","countdown","resetForm","phone","code","password","confirmPassword","sendVerificationCode","test","alert","value","timer","setInterval","clearInterval","error","console","handleResetPassword"],"sources":["/Users/apple/IdeaProjects/AIreview/frontend/src/views/login/reset-password.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <div class=\"login-header\">\n        <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"logo\">\n        <h2>Soybean 管理系统</h2>\n      </div>\n      <h3 class=\"login-title\">重置密码</h3>\n      \n      <form @submit.prevent=\"handleResetPassword\">\n        <div class=\"form-item\">\n          <input \n            type=\"tel\" \n            v-model=\"resetForm.phone\" \n            placeholder=\"请输入手机号\"\n            required\n          >\n        </div>\n        <div class=\"form-item verification-code\">\n          <input \n            type=\"text\" \n            v-model=\"resetForm.code\" \n            placeholder=\"请输入验证码\"\n            required\n          >\n          <button \n            type=\"button\" \n            class=\"send-code-btn\" \n            :disabled=\"countdown > 0\"\n            @click=\"sendVerificationCode\"\n          >\n            {{ countdown > 0 ? `${countdown}秒后重试` : '获取验证码' }}\n          </button>\n        </div>\n        <div class=\"form-item\">\n          <input \n            type=\"password\" \n            v-model=\"resetForm.password\" \n            placeholder=\"请输入新密码\"\n            required\n          >\n        </div>\n        <div class=\"form-item\">\n          <input \n            type=\"password\" \n            v-model=\"resetForm.confirmPassword\" \n            placeholder=\"请再次输入新密码\"\n            required\n          >\n        </div>\n        <button type=\"submit\">确认</button>\n      </form>\n\n      <div class=\"back-btn\" @click=\"router.back()\">返回</div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'LoginResetPassword'\n}\n</script>\n\n<script setup>\nimport { reactive, ref } from 'vue'\nimport { useRouter } from 'vue-router'\n\nconst router = useRouter()\nconst countdown = ref(0)\nconst resetForm = reactive({\n  phone: '',\n  code: '',\n  password: '',\n  confirmPassword: ''\n})\n\nconst sendVerificationCode = async () => {\n  if (!/^1[3-9]\\d{9}$/.test(resetForm.phone)) {\n    alert('请输入正确的手机号')\n    return\n  }\n  \n  try {\n    countdown.value = 60\n    const timer = setInterval(() => {\n      countdown.value--\n      if (countdown.value <= 0) {\n        clearInterval(timer)\n      }\n    }, 1000)\n  } catch (error) {\n    console.error('发送验证码失败：', error)\n  }\n}\n\nconst handleResetPassword = async () => {\n  if (resetForm.password !== resetForm.confirmPassword) {\n    alert('两次输入的密码不一致')\n    return\n  }\n  // 重置密码逻辑\n}\n</script>\n\n<style scoped>\n/* 复用 App.vue 中的样式 */\n</style> "],"mappings":"AAiEA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAI;AAClC,SAASC,SAAS,QAAQ,YAAW;AAPrC,MAAAC,WAAA,GAAe;EACbC,IAAI,EAAE;AACR;;;;;;IAOA,MAAMC,MAAM,GAAGH,SAAS,CAAC;IACzB,MAAMI,SAAS,GAAGL,GAAG,CAAC,CAAC;IACvB,MAAMM,SAAS,GAAGP,QAAQ,CAAC;MACzBQ,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;IACnB,CAAC;IAED,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI,CAAC,eAAe,CAACC,IAAI,CAACN,SAAS,CAACC,KAAK,CAAC,EAAE;QAC1CM,KAAK,CAAC,WAAW;QACjB;MACF;MAEA,IAAI;QACFR,SAAS,CAACS,KAAK,GAAG,EAAC;QACnB,MAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;UAC9BX,SAAS,CAACS,KAAK,EAAC;UAChB,IAAIT,SAAS,CAACS,KAAK,IAAI,CAAC,EAAE;YACxBG,aAAa,CAACF,KAAK;UACrB;QACF,CAAC,EAAE,IAAI;MACT,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK;MACjC;IACF;IAEA,MAAME,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAId,SAAS,CAACG,QAAQ,KAAKH,SAAS,CAACI,eAAe,EAAE;QACpDG,KAAK,CAAC,YAAY;QAClB;MACF;MACA;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}